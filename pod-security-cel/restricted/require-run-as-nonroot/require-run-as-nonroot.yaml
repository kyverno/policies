apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: require-run-as-nonroot
  annotations:
    policies.kyverno.io/title: Require runAsNonRoot in CEL expressions
    policies.kyverno.io/category: Pod Security Standards (Restricted)
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.11.0
    kyverno.io/kubernetes-version: "1.26-1.27"
    policies.kyverno.io/description: >-
      Containers must be required to run as non-root users. This policy ensures
      `runAsNonRoot` is set to `true`. A known issue prevents a policy such as this
      using `anyPattern` from being persisted properly in Kubernetes 1.23.0-1.23.2.
spec:
  validationFailureAction: Audit
  background: true
  rules:
    - name: run-as-non-root
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: >-
          Running as root is not allowed. Either the field spec.securityContext.runAsNonRoot
          must be set to `true`, or the fields spec.containers[*].securityContext.runAsNonRoot,
          spec.initContainers[*].securityContext.runAsNonRoot, and spec.ephemeralContainers[*].securityContext.runAsNonRoot
          must be set to `true`.
        cel:
          expressions:
            - expression: >- 
                (!has(object.spec.securityContext) ||
                !has(object.spec.securityContext.runAsNonRoot) ||
                object.spec.securityContext.runAsNonRoot == true)
                &&
                (object.spec.containers.all(container, !has(container.securityContext) ||
                !has(container.securityContext.runAsNonRoot) ||
                container.securityContext.runAsNonRoot == true))
                &&
                (!has(object.spec.initContainers) ||
                object.spec.initContainers.all(container, !has(container.securityContext) ||
                !has(container.securityContext.runAsNonRoot) ||
                container.securityContext.runAsNonRoot == true))
                &&
                (!has(object.spec.ephemeralContainers) ||
                object.spec.ephemeralContainers.all(container, !has(container.securityContext) ||
                !has(container.securityContext.runAsNonRoot) ||
                container.securityContext.runAsNonRoot == true))
    
            - expression: >- 
                has(object.spec.securityContext) || 
                (object.spec.containers.all(container, has(container.securityContext) && has(container.securityContext.runAsNonRoot))
                && 
                (!has(object.spec.initContainers) || object.spec.initContainers.all(container, has(container.securityContext) && has(container.securityContext.runAsNonRoot)))
                &&
                (!has(object.spec.ephemeralContainers) || object.spec.ephemeralContainers.all(container, has(container.securityContext) && has(container.securityContext.runAsNonRoot))))
