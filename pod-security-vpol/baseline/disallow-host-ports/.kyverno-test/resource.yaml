###### Pods - Bad
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod01
spec:
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: dns
      containerPort: 5553
      hostPort: 53
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod02
spec:
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
    - name: dns
      containerPort: 5553
      hostPort: 53
      protocol: UDP
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod03
spec:
  containers:
  - name: container01
    image: dummyimagename
  - name: container02
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
    - name: dns
      containerPort: 5553
      hostPort: 53
      protocol: UDP
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod04
spec:
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
  - name: container02
    image: dummyimagename
    ports:
    - name: dns
      containerPort: 5553
      hostPort: 53
      protocol: UDP
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod05
spec:
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: web-secure
      containerPort: 4443
      hostPort: 443
  - name: container02
    image: dummyimagename
    ports:
    - name: dns
      containerPort: 5553
      hostPort: 53
      protocol: UDP
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod06
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: dns
      containerPort: 5553
      hostPort: 53
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod07
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: dns
      containerPort: 5553
      hostPort: 53
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod08
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
  - name: initcontainer02
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: dns
      containerPort: 5553
      hostPort: 53
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod09
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
    ports:
    - name: web
      containerPort: 4443
      hostPort: 443
  - name: initcontainer02
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: dns
      containerPort: 5553
      hostPort: 53
---
apiVersion: v1
kind: Pod
metadata:
  name: badpod10
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
    ports:
    - name: dns
      containerPort: 5553
      hostPort: 53
  containers:
  - name: container01
    image: dummyimagename
---
###### Pods - Good
apiVersion: v1
kind: Pod
metadata:
  name: goodpod01
spec:
  containers:
  - name: container01
    image: dummyimagename
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod02
spec:
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod03
spec:
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
    - name: web-insecure
      containerPort: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod04
spec:
  containers:
  - name: container01
    image: dummyimagename
  - name: container02
    image: dummyimagename
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod05
spec:
  containers:
  - name: container01
    image: dummyimagename
  - name: container02
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod06
spec:
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: web-insecure
      containerPort: 8080
  - name: container02
    image: dummyimagename
    ports:
    - name: admin
      containerPort: 8000
      protocol: TCP
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod07
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
  containers:
  - name: container01
    image: dummyimagename
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod08
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
    ports:
    - name: web-insecure
      containerPort: 8080
  containers:
  - name: container01
    image: dummyimagename
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod09
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
    ports:
    - name: web-insecure
      containerPort: 8080
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: web-insecure
      containerPort: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: goodpod10
spec:
  initContainers:
  - name: initcontainer01
    image: dummyimagename
  - name: initcontainer02
    image: dummyimagename
    ports:
    - name: web-insecure
      containerPort: 8080
  containers:
  - name: container01
    image: dummyimagename
    ports:
    - name: web-insecure
      containerPort: 8080
---
###### Deployments - Bad
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: dns
          containerPort: 5553
          hostPort: 53
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment02
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
        - name: dns
          containerPort: 5553
          hostPort: 53
          protocol: UDP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment03
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
      - name: container02
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
        - name: dns
          containerPort: 5553
          hostPort: 53
          protocol: UDP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment04
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
      - name: container02
        image: dummyimagename
        ports:
        - name: dns
          containerPort: 5553
          hostPort: 53
          protocol: UDP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment05
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: web-secure
          containerPort: 4443
          hostPort: 443
      - name: container02
        image: dummyimagename
        ports:
        - name: dns
          containerPort: 5553
          hostPort: 53
          protocol: UDP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment06
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: dns
          containerPort: 5553
          hostPort: 53
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment07
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: dns
          containerPort: 5553
          hostPort: 53
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment08
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
      - name: initcontainer02
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: dns
          containerPort: 5553
          hostPort: 53
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment09
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
        ports:
        - name: web
          containerPort: 4443
          hostPort: 443
      - name: initcontainer02
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: dns
          containerPort: 5553
          hostPort: 53
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baddeployment10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
        ports:
        - name: web
          containerPort: 4443
          hostPort: 443
      containers:
      - name: container01
        image: dummyimagename
---
###### Deployments - Good
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment02
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment03
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
        - name: web-insecure
          containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment04
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
      - name: container02
        image: dummyimagename
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment05
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
      - name: container02
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment06
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: web-insecure
          containerPort: 8080
      - name: container02
        image: dummyimagename
        ports:
        - name: admin
          containerPort: 8000
          protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment07
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
      containers:
      - name: container01
        image: dummyimagename
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment08
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
        ports:
        - name: web-insecure
          containerPort: 8080
      containers:
      - name: container01
        image: dummyimagename
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment09
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
        ports:
        - name: web-insecure
          containerPort: 8080
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: web-insecure
          containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gooddeployment10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: initcontainer01
        image: dummyimagename
      - name: initcontainer02
        image: dummyimagename
        ports:
        - name: web-insecure
          containerPort: 8080
      containers:
      - name: container01
        image: dummyimagename
        ports:
        - name: web-insecure
          containerPort: 8080
---
###### CronJobs - Bad
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob01
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: dns
              containerPort: 5553
              hostPort: 53
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob02
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
            - name: dns
              containerPort: 5553
              hostPort: 53
              protocol: UDP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob03
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
          - name: container02
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
            - name: dns
              containerPort: 5553
              hostPort: 53
              protocol: UDP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob04
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
          - name: container02
            image: dummyimagename
            ports:
            - name: dns
              containerPort: 5553
              hostPort: 53
              protocol: UDP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob05
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: web-secure
              containerPort: 4443
              hostPort: 443
          - name: container02
            image: dummyimagename
            ports:
            - name: dns
              containerPort: 5553
              hostPort: 53
              protocol: UDP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob06
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: dns
              containerPort: 5553
              hostPort: 53
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob07
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: dns
              containerPort: 5553
              hostPort: 53
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob08
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
          - name: initcontainer02
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: dns
              containerPort: 5553
              hostPort: 53
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob09
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
            ports:
            - name: web
              containerPort: 4443
              hostPort: 443
          - name: initcontainer02
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: dns
              containerPort: 5553
              hostPort: 53
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: badcronjob10
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
            ports:
            - name: dns
              containerPort: 5553
              hostPort: 53
          containers:
          - name: container01
            image: dummyimagename
---
###### CronJobs - Good
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob01
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob02
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob03
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
            - name: web-insecure
              containerPort: 8080
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob04
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
          - name: container02
            image: dummyimagename
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob05
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
          - name: container02
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob06
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: web-insecure
              containerPort: 8080
          - name: container02
            image: dummyimagename
            ports:
            - name: admin
              containerPort: 8000
              protocol: TCP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob07
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
          containers:
          - name: container01
            image: dummyimagename
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob08
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
            ports:
            - name: web-insecure
              containerPort: 8080
          containers:
          - name: container01
            image: dummyimagename
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob09
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
            ports:
            - name: web-insecure
              containerPort: 8080
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: web-insecure
              containerPort: 8080
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: goodcronjob10
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
          - name: initcontainer01
            image: dummyimagename
          - name: initcontainer02
            image: dummyimagename
            ports:
            - name: web-insecure
              containerPort: 8080
          containers:
          - name: container01
            image: dummyimagename
            ports:
            - name: web-insecure
              containerPort: 8080
