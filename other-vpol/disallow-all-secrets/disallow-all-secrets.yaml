apiVersion: policies.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: no-secrets
  annotations:
    policies.kyverno.io/title: Disallow all Secrets in ValidatingPolicy
    policies.kyverno.io/category: Other in Vpol 
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod, Secret
    kyverno.io/kyverno-version: 1.14.0
    policies.kyverno.io/minversion: 1.14.0
    kyverno.io/kubernetes-version: "1.30"
    policies.kyverno.io/description: >-
      Secrets often contain sensitive information which not all Pods need consume.
      This policy disables the use of all Secrets in a Pod definition. In order to work effectively,
      this Policy needs a separate Policy or rule to require `automountServiceAccountToken=false`
      at the Pod level or ServiceAccount level since this would otherwise result in a Secret being mounted.
spec:
  validationActions: 
    - Audit
  matchConstraints:
    resourceRules:
    - apiGroups:   [""]
      apiVersions: ["v1"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["pods"]
  variables:
    - name: allContainers
      expression: >-
        object.spec.containers + 
        object.spec.?initContainers.orValue([]) + 
        object.spec.?ephemeralContainers.orValue([])
  validations:
    - expression: >-
        variables.allContainers.all(container, 
        container.?env.orValue([]).all(env, 
          !has(env.valueFrom) || !has(env.valueFrom.secretKeyRef)))
      message: "No Secrets from env."
    - expression: >-
        variables.allContainers.all(container, 
        container.?envFrom.orValue([]).all(envFrom, !has(envFrom.secretRef)))
      message: "No Secrets from envFrom."
    - expression: "object.spec.?volumes.orValue([]).all(volume, !has(volume.secret))"
      message: "No Secrets from volumes."