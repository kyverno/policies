apiVersion: policies.kyverno.io/v1alpha1
kind: MutatingPolicy
metadata:
  name: apply-pss-restricted-profile
  annotations:
    policies.kyverno.io/title: Apply PSS Restricted Profile
    policies.kyverno.io/category: Other, PSP Migration
    kyverno.io/kyverno-version: 1.15.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Pod Security Standards define the fields and their options which
      are allowable for Pods to achieve certain security best practices. While
      these are typically validation policies, workloads will either be accepted or
      rejected based upon what has already been defined. It is also possible to mutate
      incoming Pods to achieve the desired PSS level rather than reject. This policy
      sets all the fields necessary to pass the PSS Restricted profile. Note that it does
      not attempt to remove non-compliant volumes and volumeMounts. Additional policies
      may be employed for this purpose.
spec:
  autogen:
    podControllers:
      controllers:
      - daemonsets
      - deployments
      - jobs
      - statefulsets
      - replicasets
      - cronjobs
  matchConstraints:
    resourceRules:
    - apiGroups: [""]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["pods"]
  mutations:
  - patchType: ApplyConfiguration
    applyConfiguration:
      expression: |
        Object{
          spec: Object.spec{
            securityContext: Object.spec.securityContext{
              seccompProfile: Object.spec.securityContext.seccompProfile{
                type: "RuntimeDefault"
              },
              runAsNonRoot: true,
              runAsUser: 1000,
              runAsGroup: 3000,
              fsGroup: 2000
            },
            containers: object.spec.containers.map(container, Object.spec.containers{
              name: container.name,
              securityContext: Object.spec.containers.securityContext{
                privileged: false,
                allowPrivilegeEscalation: false,
                capabilities: Object.spec.containers.securityContext.capabilities{
                  drop: ["ALL"]
                }
              }
            })
          }
        }