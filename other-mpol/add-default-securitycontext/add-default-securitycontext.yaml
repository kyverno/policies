apiVersion: policies.kyverno.io/v1alpha1
kind: MutatingPolicy
metadata:
  name: add-default-securitycontext
  annotations:
    policies.kyverno.io/title: Add Default securityContext
    policies.kyverno.io/category: Sample
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      A Pod securityContext entry defines fields such as the user and group which should be used to run the Pod.
      Sometimes choosing default values for users rather than blocking is a better alternative to not impede
      such Pod definitions. This policy will mutate a Pod to set `runAsNonRoot`, `runAsUser`, `runAsGroup`, and 
      `fsGroup` fields within the Pod securityContext if they are not already set.
spec:
  matchConstraints:
    resourceRules:
    - apiGroups: [""]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["pods"]
  mutations:
  - patchType: ApplyConfiguration
    applyConfiguration:
      expression: >-
        Object{
          spec: Object.spec{
            securityContext: Object.spec.securityContext{
              runAsNonRoot: has(object.spec.securityContext) && has(object.spec.securityContext.runAsNonRoot)
                           ? object.spec.securityContext.runAsNonRoot
                           : true,
              runAsUser: has(object.spec.securityContext) && has(object.spec.securityContext.runAsUser)
                         ? object.spec.securityContext.runAsUser
                         : 1000,
              runAsGroup: has(object.spec.securityContext) && has(object.spec.securityContext.runAsGroup)
                          ? object.spec.securityContext.runAsGroup
                          : 3000,
              fsGroup: has(object.spec.securityContext) && has(object.spec.securityContext.fsGroup)
                       ? object.spec.securityContext.fsGroup
                       : 2000            
            }
          }
        }
