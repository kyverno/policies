{{ if .Values.active_rules.disallow_infra_services  }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ .Values.policy_namespace }}-disallow-nodeport-services
  labels:
    {{ .Values.policy_namespace }}.io/origin: {{ .Values.policy_namespace }}
  annotations:
    policies.kyverno.io/title: Disallow Service Type NodePort
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Service
    policies.kyverno.io/description: >-
      A Kubernetes Service of type NodePort uses a host port to receive traffic from 
      any source. A NetworkPolicy cannot be used to control traffic to host ports. 
      Although NodePort Services can be useful, their use must be limited to Services 
      with additional upstream security checks. This policy validates that any new Services
      do not use the `NodePort` type.      
spec:
  validationFailureAction: enforce
  background: false
  rules:
  - name: validate-nodeport
    match:
      resources:
        kinds:
        - Service
    validate:
      message: "Services of type NodePort are not allowed."
      pattern: 
        spec:
          type: "!NodePort"
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ .Values.policy_namespace }}-disallow-loadbalancer-services
  labels:
    {{ .Values.policy_namespace }}.io/origin: {{ .Values.policy_namespace }}
  annotations:
    policies.kyverno.io/title: Disallow Service Type LoadBalancer
    policies.kyverno.io/category: Sample
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Service
    policies.kyverno.io/description: >-
      Especially in cloud provider environments, a Service having type LoadBalancer will cause the
      provider to respond by creating a load balancer somewhere in the customer account. This adds
      cost and complexity to a deployment. Without restricting this ability, users may easily
      overrun established budgets and security practices set by the organization. This policy restricts
      use of the Service type LoadBalancer.      
spec:
  validationFailureAction: enforce
  background: false
  rules:
  - name: validate-loadbalancer
    match:
      resources:
        kinds:
        - Service
    exclude:
      clusterRoles:
      - cluster-admin
      - admin
      - operator
      - jenkins-ci
    validate:
      message: "Service of type LoadBalancer is not allowed."
      pattern:
        spec:
          type: "!LoadBalancer"
{{ end }}