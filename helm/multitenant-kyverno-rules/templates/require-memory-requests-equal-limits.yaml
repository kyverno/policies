{{ if .Values.active_rules.require_memory_requests_limits  }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ .Values.policy_namespace }}-memory-requests-equal-limits
  labels:
    {{ .Values.policy_namespace }}.io/origin: {{ .Values.policy_namespace }}
  annotations:
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/title: Memory Requests Equal Limits
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.3.6
    policies.kyverno.io/description: >-
      Pods which have memory limits equal to requests are given a QoS class of Guaranteed
      which is the highest schedulable class. This policy checks that all containers in
      a given Pod have memory requests equal to limits.
spec:
  validationFailureAction: {{ .Values.requestsEqualLimitsAction | default "enforce"  }} 
  background: false
  rules:
  - name: memory-requests-equal-limits-deployment
    match:
      resources:
        kinds:
        - Pod
        namespaceSelector:
          matchExpressions:
          - key: {{ .Values.policy_namespace }}.io/type
            operator: NotIn
            values: [ephemeral, system]
    exclude:
      resources:
        {{- with .Values.excluded_namespaces  }}
        namespaces:
          {{- toYaml . | nindent 10 }}
        {{- end }}
    validate:
      message: "resources.requests.memory must be equal to resources.limits.memory"
      deny:
        conditions:
        - key: "{{ "{{" }}  request.object.spec.template.spec.containers[?resources.requests.memory!=resources.limits.memory] | length(@) {{ "}}" }} "
          operator: NotEquals
          value: 0
  - name: memory-requests-equal-limits-pod
    match:
      resources:
        kinds:
        - Pod
    validate:
      message: "resources.requests.memory must be equal to resources.limits.memory"
      deny:
        conditions:
        - key: "{{ "{{" }}  request.object.spec.containers[?resources.requests.memory!=resources.limits.memory] | length(@) {{ "}}" }} "
          operator: NotEquals
          value: 0
  - name: memory-requests-equal-limits-cronjob
    match:
      resources:
        kinds:
        - CronJob
    validate:
      message: "resources.requests.memory must be equal to resources.limits.memory"
      deny:
        conditions:
        - key: "{{ "{{" }}  request.object.spec.jobTemplate.spec.template.spec.containers[?resources.requests.memory!=resources.limits.memory] | length(@) {{ "}}" }} "
          operator: NotEquals
          value: 0
{{ end }}