apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: restrict-node-label-changes
spec:
  steps:
  - name: step-00
    try:
    - script:
        content: |
          node=$(kubectl get nodes --no-headers | awk 'NR==1{print $1}')
          kubectl label nodes $node --overwrite foo=bar
  - name: step-01
    try:
    - script:
        content: |
          kubectl get configmap kyverno -n kyverno -o yaml | sed 's/\[Node\/\*,\*,\*\]//g' - | sed 's/\[Node,\*,\*\]//g' - | kubectl apply -f -
    - command:
        args:
        - "5"
        entrypoint: sleep
  - name: step-02
    try:
    - apply:
        file: ../restrict-node-label-changes.yaml
    - assert:
        file: policy-ready.yaml
  - name: step-03
    try:
    - script:
        content: |
          node=$(kubectl get nodes --no-headers | awk 'NR==1{print $1}')
          if kubectl label --overwrite nodes $node foo=foo; then echo "Failure: successfully modified foo"; exit 1; else echo "Success: failed to modify label foo"; fi
          if kubectl label nodes $node foo-; then echo "Failure: successfully removed foo"; exit 1; else echo "Success: failed to remove label foo"; fi
          if kubectl label nodes $node bar=foo; then echo "Success: added label bar"; else echo "Failed to add label bar"; exit 1; fi
          if kubectl label nodes --overwrite $node bar=bar; then echo "Success: modified label bar"; else echo "Failed to modify label bar"; exit 1; fi
          if kubectl label nodes $node bar-; then echo "Success: removed label bar"; else echo "Failed to remove label bar"; exit 1; fi
  - name: step-04
    try:
    - script:
        content: |
          kubectl get configmap -n kyverno kyverno -o yaml | sed 's/\[APIService,\*,\*\]/\[Node,\*,\*\] \[Node\/\*,\*,\*\] \[APIService,\*,\*\]/g' - | kubectl apply -f -
    - script:
        content: |
          node=$(kubectl get nodes --no-headers | awk 'NR==1{print $1}');
          kubectl label --overwrite nodes $node foo-
