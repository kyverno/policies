apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: set-karpenter-non-cpu-limits
  annotations:
    policies.kyverno.io/title: Set non-CPU limits for pods to work well with Karpenter.
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/category: Karpenter, EKS Best Practices
    policies.kyverno.io/severity: medium
    kyverno.io/kyverno-version: 1.9.3
    kyverno.io/kubernetes-version: "1.26"
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      For correct node provisioning Karpenter should know exactly what the non-CPU resources are 
      that the pods will need. Otherwise Karpenter will put as many pods on a node as possible, 
      which may lead to memory pressure on nodes. This is especially important in consolidation 
      mode.
spec:
  rules:
    - name: set-ephemeral-storage
      match:
        any:
          - resources:
              kinds:
                - Pod
      mutate:
        foreach:
          - list: request.object.spec.containers
            patchStrategicMerge:
              spec:
                containers:
                  - (name): "{{element.name}}"
                    resources:
                      limits:
                        +(ephemeral-storage): "{{element.resources.limits.\"ephemeral-storage\" || element.resources.requests.\"ephemeral-storage\"}}"
                      requests:
                        ephemeral-storage: "{{element.resources.limits.\"ephemeral-storage\" || element.resources.requests.\"ephemeral-storage\"}}"
    - name: set-memory
      match:
        any:
          - resources:
              kinds:
                - Pod
      mutate:
        foreach:
          - list: request.object.spec.containers
            patchStrategicMerge:
              spec:
                containers:
                  - (name): "{{element.name}}"
                    resources:
                      limits:
                        +(memory): "{{element.resources.limits.memory || element.resources.requests.memory}}"
                      requests:
                        memory: "{{element.resources.limits.memory || element.resources.requests.memory}}"
