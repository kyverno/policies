name: Policy Test

on:
  push:
    branches:
      - main
      - release*
  pull_request:
    branches:
      - main
      - release*

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247
        with:
          path: policies

      - name: Clone Kyverno
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247
        with:
          repository: kyverno/kyverno
          path: kyverno
          # The target branch of a pull request or the branch/tag of a push
          ref: ${{ github.base_ref || github.ref_name }}

      - name: Set up Go 
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9
        with:
          go-version: 1.19

      - name: Test Policy
        run: go run ./cmd/cli/kubectl-kyverno test ../policies
        working-directory: kyverno
      
      - name: Validate all policies
        run: |
          #!/bin/bash
          set -euo pipefail

          # Function to validate if the directory has a YAML file with the same name
          validate_yaml_file() {
            local dir="$1"
            local yaml_file="$dir/$(basename "$dir").yaml"

            if [[ ! -f "$yaml_file" ]]; then
              echo "YAML file $yaml_file is not found in the directory $dir"
              exit 1
            fi
          }

          # Loop through each policy directory in the repository
          for policy_dir in $(find "$GITHUB_WORKSPACE" -type d -name '*-*'); do
            # Validate that policy is named the same as the folder
            if [[ $(basename "$policy_dir") != $(basename "$(dirname "$policy_dir")") ]]; then
              echo "Policy in directory $policy_dir is not named the same as the folder"
              exit 1
            fi
            # Validate that artifacthub-pkg.yml file is found in the same folder as the policy
            if [[ ! -f "$policy_dir/artifacthub-pkg.yml" ]]; then
              echo "artifacthub-pkg.yml file is not found in the same folder as the policy in directory $policy_dir"
              exit 1
            fi

            # Check if the directory has a YAML file with the same name
            validate_yaml_file "$policy_dir"

            # Check if subdirectories have a YAML file with the same name
            for nested_policy_dir in $(find "$policy_dir" -mindepth 1 -type d); do
              validate_yaml_file "$nested_policy_dir"
            done
          done

        # run: |
        #   #!/bin/bash
        #   set -euo pipefail
        #   # Loop through each policy directory in the repository
        #   for policy_dir in $(find "$GITHUB_WORKSPACE" -type d -name '*-*'); do
        #     # Validate that policy is named the same as the folder
        #     if [[ $(basename "$policy_dir") != $(basename "$(dirname "$policy_dir")") ]]; then
        #       echo "Policy in directory $policy_dir is not named the same as the folder"
        #       exit 1
        #     fi
        #     # Validate that artifacthub-pkg.yml file is found in the same folder as the policy
        #     if [[ ! -f "$policy_dir/artifacthub-pkg.yml" ]]; then
        #       echo "artifacthub-pkg.yml file is not found in the same folder as the policy in directory $policy_dir"
        #       exit 1
        #     fi
        #   done