name: Policy Test

on:
  push:
    branches:
      - main
      - release*
  pull_request:
    branches:
      - main
      - release*

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247
        with:
          path: policies

      - name: Clone Kyverno
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247
        with:
          repository: kyverno/kyverno
          path: kyverno
          # The target branch of a pull request or the branch/tag of a push
          ref: ${{ github.base_ref || github.ref_name }}

      - name: Set up Go 
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9
        with:
          go-version: 1.19

      - name: Test Policy
        run: go run ./cmd/cli/kubectl-kyverno test ../policies
        working-directory: kyverno

      - name: Validate all policies
        run: |
          #!/bin/bash

          set -euo pipefail

          # Loop through each policy directory in the repository
          for policy_dir in $(find "$GITHUB_WORKSPACE" -type d -name '*-*'); do
            # Validate that the folder name contains only dashes as the non-alphanumeric characters
            if [[ ! $(basename "$policy_dir") =~ ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$ ]]; then
              echo "Policy folder name in directory $policy_dir contains invalid characters"
              exit 1
            fi

            # Validate that each policy file in the directory has the same parent folder name as part of its name
            policy_files=$(find "$policy_dir" -maxdepth 1 -type f -name '*.yaml')
            for policy_file in $policy_files; do
              policy_name=$(basename "$policy_file" .yaml)
              if [[ ! "$policy_name" =~ ^$(basename "$policy_dir") ]]; then
                echo "Policy $policy_file in directory $policy_dir does not have the same parent folder name"
                exit 1
              fi
            done

            # Validate that artifacthub-pkg.yml file is found in the same folder as the policy
            if [[ ! -f "$policy_dir/artifacthub-pkg.yml" ]]; then
              echo "artifacthub-pkg.yml file is not found in the same folder as the policy in directory $policy_dir"
              exit 1
            fi
          done
