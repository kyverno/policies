# This is an example rule intended to be cloned & modified to meet organizational requirements.
# The `dataprotetion` label value can be changed to correspond with specific policy templates.
# 
# NOTE: Use of this policy will require granting the Kyverno background-controller additional privileges required to generate Kasten resources. An example ClusterRole to provide required privileges is provided within the comments of the policy manifest.
#
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   labels:
#     app.kubernetes.io/component: background-controller
#     app.kubernetes.io/instance: kyverno
#     app.kubernetes.io/part-of: kyverno
#   name: kyverno:create-kasten-policies
# rules:
# - apiGroups:
#   - config.kio.kasten.io
#   resources:
#   - policies
#   verbs:
#   - create
#   - update
#   - delete
#
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: kasten-generate-example-backup-policy
  annotations:
    policies.kyverno.io/title: Generate Kasten Backup Policy Based on Resource Label
    policies.kyverno.io/category: Veeam Kasten
    kyverno.io/kyverno-version: 1.12.1
    policies.kyverno.io/minversion: 1.12.0
    kyverno.io/kubernetes-version: "1.24-1.30"
    policies.kyverno.io/subject: Policy
    policies.kyverno.io/description: >-
      Generates a Kasten policy for a namespace that includes any Deployment or StatefulSet with a "dataprotection=kasten-example" label, if the policy does not already exist. This Kyverno policy can be used in combination with the "kasten-data-protection-by-label" policy to require "dataprotection" labeling on workloads.
spec:
  rules:
  - name: kasten-generate-example-backup-policy
    match:
      any:
      - resources:
          kinds:
            - Deployment
            - StatefulSet
          selector:
            matchLabels:
              dataprotection: kasten-example
    context:
    - name: dataprotectionLabelValue
      variable:
        value: "kasten-example"
    - name: kyvernoPolicyName
      variable:
        value: "kasten-generate-example-backup-policy"
    - name: existingPolicy
      apiCall:
        urlPath: "/apis/config.kio.kasten.io/v1alpha1/namespaces/kasten-io/policies" # returns list of Kasten policies from kasten-io namespace
        jmesPath: "items[][[@.metadata.labels.\"generate.kyverno.io/policy-name\"=='{{ kyvernoPolicyName }}'] && [@.spec.selector.matchExpressions[].values[?@=='{{ request.namespace }}']]][][][][] | length(@)" # queries if a Kasten policy protecting the namespace generated by this Kyverno policy already exists 
    preconditions:
      any:
      - key: "{{ existingPolicy }}"
        operator: Equals
        value: 0 # Only generate the policy if it does not already exist
    generate:
      apiVersion: config.kio.kasten.io/v1alpha1
      kind: Policy
      name: "{{ request.namespace }}-{{ dataprotectionLabelValue }}-policy"
      namespace: kasten-io
      data:   
        metadata: 
          name: "{{ request.namespace }}-{{ dataprotectionLabelValue }}-policy"
          namespace: kasten-io
        spec:
          comment: "Auto-generated by Kyverno"
          frequency: '@daily'
          retention:
            daily: 7
            weekly: 4
            monthly: 12
            yearly: 7
          actions:
          - action: backup
          - action: export
            exportParameters:
              frequency: '@daily'
              profile:
                name: test
                namespace: kasten-io
              exportData:
                enabled: true
          selector:
            matchExpressions:
              - key: k10.kasten.io/appNamespace
                operator: In
                values:
                  - "{{ request.namespace }}"
