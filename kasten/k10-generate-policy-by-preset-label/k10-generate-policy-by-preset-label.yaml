# NOTE: This example assumes that K10 policy presets named "gold", "silver", and "bronze" have been pre-created and K10 was deployed into the `kasten-io` namespace. And the kyverno:generate ClusterRole has been updated with the following additional permissions:
# - apiGroups:
#   - config.kio.kasten.io
#   resources:
#   - policies
#   verbs:
#   - create
#   - update
#   - list
#   - get
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: k10-generate-policy-by-preset-label
  annotations:
    policies.kyverno.io/title: Generate Backup Policy by Preset
    policies.kyverno.io/category: Kasten K10 by Veeam
    policies.kyverno.io/subject: Policy
    kyverno.io/kyverno-version: 1.9.0
    policies.kyverno.io/minversion: 1.9.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >-
      Generate a K10 backup policy for a namespace that includes a valid "dataprotection" label, if the policy does not already exist.
spec:
  background: false
  rules:
  - name: k10-generate-policy-by-preset-label
    match:
      any:
      - resources:
          kinds:
            - Namespace
          selector:
            matchExpressions:
              - key: dataprotection 
                operator: In
                values: 
                - gold
                - silver
                - bronze
    context:
    - name: existingPolicy
      apiCall:
        urlPath: "/apis/config.kio.kasten.io/v1alpha1/namespaces/kasten-io/policies/" # returns list of K10 policies from kasten-io namespace
        jmesPath: "items[][[@.spec.presetRef][?name=='{{ request.object.metadata.labels.dataprotection }}'] && [@.spec.selector.matchExpressions[].values[?@=='{{ request.namespace }}']]][][][][] | length(@)" # queries if a policy based on the dataprotection label value, covering that app namespace already exists 
    preconditions:
      any:
      - key: "{{ existingPolicy }}"
        operator: Equals
        value: 0 # Only generate the policy if it does not already exist
    generate:
      apiVersion: config.kio.kasten.io/v1alpha1
      kind: Policy
      name: "{{ request.namespace }}-{{ request.object.metadata.labels.dataprotection }}-backup"
      namespace: kasten-io
      data:
        spec:
          comment: "Auto-generated by Kyverno"
          paused: false
          actions:
            - action: backup
          presetRef:
            name: "{{ request.object.metadata.labels.dataprotection }}"
            namespace: kasten-io
          selector:
            matchExpressions:
              - key: k10.kasten.io/appNamespace
                operator: In
                values:
                  - "{{ request.namespace }}"